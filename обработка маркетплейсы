//Блок показа товаров
&НаКлиенте
Процедура ПоказатьТовары(Команда)
	ПоказатьТоварыНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПоказатьТоварыНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОстаткиТоваров.Количество КАК Количество,
	|	ОстаткиТоваров.СтруктурнаяЕдиница КАК Склад,
	|	ОстаткиТоваров.Номенклатура КАК Номенклатура,
	|	ОстаткиТоваров.Характеристика КАК Характеристика,
	|	ХарактеристикиНоменклатурыДополнительныеРеквизиты.Значение КАК АртикулСММ,
	|	ЦеныНоменклатурыСрезПоследних.Цена КАК Цена,
	|	ЦеныНоменклатурыСрезПоследних1.Цена КАК Цена1,
	|	ЦеныНоменклатурыСрезПоследних2.Цена КАК Цена2,
	|	ХарактеристикиНоменклатурыДополнительныеРеквизиты1.Значение КАК IDOzon
	|ИЗ
	|	РегистрСведений.ОстаткиТоваров КАК ОстаткиТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры.ДополнительныеРеквизиты КАК ХарактеристикиНоменклатурыДополнительныеРеквизиты
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних КАК ЦеныНоменклатурыСрезПоследних
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних КАК ЦеныНоменклатурыСрезПоследних1
	|					ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних КАК ЦеныНоменклатурыСрезПоследних2
	|					ПО ЦеныНоменклатурыСрезПоследних1.Характеристика.Ссылка = ЦеныНоменклатурыСрезПоследних2.Характеристика.Ссылка
	|				ПО ЦеныНоменклатурыСрезПоследних.Характеристика.Ссылка = ЦеныНоменклатурыСрезПоследних1.Характеристика.Ссылка
	|			ПО (ЦеныНоменклатурыСрезПоследних.Характеристика.Ссылка = ХарактеристикиНоменклатурыДополнительныеРеквизиты.Ссылка)
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры.ДополнительныеРеквизиты КАК ХарактеристикиНоменклатурыДополнительныеРеквизиты1
	|			ПО ХарактеристикиНоменклатурыДополнительныеРеквизиты.Ссылка = ХарактеристикиНоменклатурыДополнительныеРеквизиты1.Ссылка
	|		ПО ОстаткиТоваров.Характеристика.Ссылка = ХарактеристикиНоменклатурыДополнительныеРеквизиты.Ссылка
	|ГДЕ
	|	ХарактеристикиНоменклатурыДополнительныеРеквизиты.Свойство.Наименование ПОДОБНО ""Артикул Ozon""
	|	И ОстаткиТоваров.СтруктурнаяЕдиница.Наименование ПОДОБНО ""офис""
	|	И ЦеныНоменклатурыСрезПоследних.ВидЦен.Наименование ПОДОБНО ""Учетная цена""
	|	И ЦеныНоменклатурыСрезПоследних1.ВидЦен.Наименование ПОДОБНО ""Цена Ozon""
	|	И ЦеныНоменклатурыСрезПоследних2.ВидЦен.Наименование ПОДОБНО ""Цена Ozon со скидкой""  
	|   И ХарактеристикиНоменклатурыДополнительныеРеквизиты1.Свойство.Наименование ПОДОБНО ""Артикул Ozon""";
	
	РезультатЗапроса = Запрос.Выполнить(); 
	Выборка = РезультатЗапроса.Выбрать(); 
	
	Пока Выборка.Следующий() Цикл
		СписокТоваров = Объект.СписокТоваров.Добавить();
		Объект.СписокТоваров[Объект.СписокТоваров.Количество()-1].Номенклатура = Выборка.Номенклатура;
		Объект.СписокТоваров[Объект.СписокТоваров.Количество()-1].Характеристика = Выборка.Характеристика;
		Объект.СписокТоваров[Объект.СписокТоваров.Количество()-1].АртикулСММ = Выборка.АртикулСММ; 
		Объект.СписокТоваров[Объект.СписокТоваров.Количество()-1].IDOzon = Выборка.IDOzon;
		Объект.СписокТоваров[Объект.СписокТоваров.Количество()-1].Склад = Выборка.Склад;
		Объект.СписокТоваров[Объект.СписокТоваров.Количество()-1].Остаток = Выборка.Количество;
		Объект.СписокТоваров[Объект.СписокТоваров.Количество()-1].Цена = Выборка.Цена;  
		Объект.СписокТоваров[Объект.СписокТоваров.Количество()-1].ЦенаOzon = Выборка.Цена1;
		Объект.СписокТоваров[Объект.СписокТоваров.Количество()-1].ЦенаOzonСоСкидкой = Выборка.Цена2;

		
	КонецЦикла;
	
КонецПроцедуры

//Блок SMM
&НаКлиенте
Процедура ОтправитьОстатки(Команда)
	ОтправитьОстаткиНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОтправитьОстаткиНаСервере()
	
	Если ОтправитьЗапрос(Ложь,Объект.СписокТоваров, "F9C5438C-DE6E-4E4C-8D5B-35439A4E28D7") Тогда
		Сообщить("Запрос успешно отправлен.");
	Иначе
		Сообщить("Не удалось отправить запрос.");
	КонецЕсли;
	
КонецПроцедуры   

&НаКлиенте
Процедура ОтправитьЦены(Команда)
	ОтправитьЦеныНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОтправитьЦеныНаСервере()
	Если ОтправитьЗапрос(Истина,Объект.СписокТоваров, "F9C5438C-DE6E-4E4C-8D5B-35439A4E28D7") Тогда
		Сообщить("Запрос успешно отправлен.");
	Иначе
		Сообщить("Не удалось отправить запрос."); 
	КонецЕсли;
	
КонецПроцедуры

Функция ОтправитьЗапрос(ОбновлениеЦены,Товары, Токен)
	Перем АдресРесурса;
	Если ОбновлениеЦены Тогда
		АдресРесурса = "api/merchantIntegration/v1/offerService/manualPrice/save";  
	Иначе 
		АдресРесурса = "api/merchantIntegration/v1/offerService/stock/update";
	КонецЕсли;
	
	Заголовки=Новый Соответствие();
	Заголовки.Вставить("Content-Type","application/json");
	Запрос=Новый HTTPЗапрос();
	Запрос.АдресРесурса = АдресРесурса;
	Запрос.Заголовки=Заголовки;
	// Сохраняем тело запроса в переменную перед его отправкой
	ТелоЗапроса = СформироватьТелоЗапроса(ОбновлениеЦены,Товары,Токен);
	Запрос.УстановитьТелоИзСтроки(ТелоЗапроса);
	//Запрос.УстановитьТелоИзСтроки(СформироватьТелоЗапроса(ОбновлениеЦены,Товары,Токен));
	ssl = Новый ЗащищенноеСоединениеOpenSSL();
	Соединение=Новый HTTPСоединение("partner.sbermegamarket.ru",,,,,,ssl);//таким образом полный URL запроса http://api.yourserver.ru/clients/add
	  
	// Отправляем запрос
	Ответ=Соединение.ОтправитьДляОбработки(Запрос);
	
	// Логирование запросов      
	МенеджерЗаписи = РегистрыСведений.ЛогированиеМаркетплейсы.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.ДатаВремя = ТекущаяДата();
	МенеджерЗаписи.URL = АдресРесурса;
	МенеджерЗаписи.ТелоЗапроса = ТелоЗапроса;
	МенеджерЗаписи.КодОтвета = Ответ.КодСостояния;
	МенеджерЗаписи.Комментарий = Ответ.ПолучитьТелоКакСтроку();
	МенеджерЗаписи.Записать();   
	
	Сообщить (Ответ.ПолучитьТелоКакСтроку());
	
	Возврат Истина;
	
КонецФункции  

Функция СформироватьТелоЗапроса(ОбновлениеЦены,Товары, Токен) 
	
	Перем ДанныеJSON, МассивОстатков, СтрокаТаблицы,Остаток;
	МассивОстатков = Новый Массив;
	Для Каждого СтрокаТаблицы Из Товары Цикл 
		Если ОбновлениеЦены Тогда
			Остаток = Новый Структура ("offerId, price, isDeleted"); 
			Остаток.price = СтрокаТаблицы.Цена;
			Остаток.isDeleted = false;
		Иначе
			Остаток = Новый Структура("offerId, quantity");
			Остаток.quantity = СтрокаТаблицы.Остаток;
		КонецЕсли;
		Остаток.offerId = СтрокаТаблицы.АртикулСММ;
		МассивОстатков.Добавить(Остаток);
	КонецЦикла;
	ДанныеJSON = Новый Структура("meta, data"); 
	ДанныеJSON.meta = Новый Структура();
	Если ОбновлениеЦены Тогда
		ДанныеJSON.data = Новый Структура("token, prices"); 
		ДанныеJSON.data.prices = МассивОстатков;
	Иначе 
		ДанныеJSON.data = Новый Структура("token, stocks"); 
		ДанныеJSON.data.stocks = МассивОстатков;
	КонецЕсли;
	ДанныеJSON.data.token = Токен;
	Возврат ЗаписьJSON(ДанныеJSON);
КонецФункции   

//БЛОК OZON
&НаКлиенте
Процедура ОтправитьОстаткиОзон(Команда)
	ОтправитьОстаткиОзонНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОтправитьОстаткиОзонНаСервере()
    
	Если ОтправитьЗапросОзон(Ложь,Объект.СписокТоваров) Тогда
		Сообщить("Запрос успешно отправлен.");
	Иначе
		Сообщить("Не удалось отправить запрос."); 
	КонецЕсли;

	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьЦеныОзон(Команда)
	ОтправитьЦеныОзонНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОтправитьЦеныОзонНаСервере()

	Если ОтправитьЗапросОзон(Истина,Объект.СписокТоваров) Тогда
		Сообщить("Запрос успешно отправлен.");
	Иначе
		Сообщить("Не удалось отправить запрос."); 
	КонецЕсли;
	
КонецПроцедуры	

Функция ОтправитьЗапросОзон(ОбновлениеЦены, Товары)
	КоличествоТоваров = Товары.Количество();
	МассивТоваров = Товары.Выгрузить();
	КоличествоЗапросов = Цел(КоличествоТоваров / 100) + ?(КоличествоТоваров % 100 > 0, 1, 0);
	
	Для индекс = 0 По КоличествоЗапросов - 1 Цикл
		Начало = индекс * 100;
		Если КоличествоТоваров - 1 > Начало + 99 Тогда
			Конец = Начало + 99;
		Иначе
			Конец = КоличествоТоваров - 1;
		КонецЕсли;

		ТекущиеТовары = Новый Массив;
		
		Для счетчик = Начало По Конец Цикл
			ТекущиеТовары.Добавить(МассивТоваров[счетчик]);
		КонецЦикла;
		
		ОтправитьОтдельныйЗапросОзон(ОбновлениеЦены, ТекущиеТовары);
	КонецЦикла;

	Возврат Истина;
КонецФункции

Процедура ОтправитьОтдельныйЗапросОзон(ОбновлениеЦены,Товары)
	Перем АдресРесурса;
	Если ОбновлениеЦены Тогда
		АдресРесурса = "v1/product/import/prices";  
	Иначе 
		АдресРесурса = "v1/product/import/stocks"; 
		//АдресРесурса = "api/merchantIntegration/v1/offerService/stock/update";
	КонецЕсли;
	
	Заголовки=Новый Соответствие();
	Заголовки.Вставить("Client-Id", "88469");
	Заголовки.Вставить("Api-Key", "4e00968b-0f89-4d91-aa2a-f635ac09ea6b");
	Заголовки.Вставить("Content-Type","application/json");
	Запрос=Новый HTTPЗапрос();
	Запрос.АдресРесурса = АдресРесурса;
	Запрос.Заголовки=Заголовки;
	// Сохраняем тело запроса в переменную перед его отправкой
	ТелоЗапроса = СформироватьТелоЗапросаОзон(ОбновлениеЦены,Товары);
	Запрос.УстановитьТелоИзСтроки(ТелоЗапроса);
	ssl = Новый ЗащищенноеСоединениеOpenSSL();
	Соединение=Новый HTTPСоединение("api-seller.ozon.ru",,,,,,ssl);
	//Соединение=Новый HTTPСоединение("partner.sbermegamarket.ru",,,,,,ssl);
	  
	// Отправляем запрос
	Ответ=Соединение.ОтправитьДляОбработки(Запрос);
	
	// Логирование запросов      
	МенеджерЗаписи = РегистрыСведений.ЛогированиеМаркетплейсы.СоздатьМенеджерЗаписи(); 
	МенеджерЗаписи.ДатаВремя = ТекущаяДата();
	МенеджерЗаписи.URL = АдресРесурса;
	МенеджерЗаписи.ТелоЗапроса = ТелоЗапроса;
	МенеджерЗаписи.КодОтвета = Ответ.КодСостояния;
	МенеджерЗаписи.Комментарий = Ответ.ПолучитьТелоКакСтроку(); 
	МенеджерЗаписи.Идентификатор = Новый УникальныйИдентификатор;
	МенеджерЗаписи.Записать();   
	
	Сообщить (Ответ.ПолучитьТелоКакСтроку());
КонецПроцедуры

Функция СформироватьТелоЗапросаОзон(ОбновлениеЦены,Товары) 
	
	Перем ДанныеJSON, МассивОстатков, СтрокаТаблицы,Остаток;
	МассивОстатков = Новый Массив;
	Для Каждого СтрокаТаблицы Из Товары Цикл 
		Если ОбновлениеЦены Тогда
			Остаток = Новый Структура("auto_action_enabled, currency_code, min_price, offer_id, old_price, price, price_strategy_enabled, product_id");
			Остаток.Вставить ("auto_action_enabled", "UNKNOWN");
			Остаток.Вставить ("currency_code", "RUB");
			Остаток.Вставить ("price", СтрокаТаблицы.ЦенаOzonСоСкидкой);
			Остаток.Вставить ("min_price",СтрокаТаблицы.Цена);
			Остаток.Вставить ("old_price", СтрокаТаблицы.ЦенаOzon);
			Остаток.Вставить ("price_strategy_enabled", "UNKNOWN");
		Иначе
			Остаток = Новый Структура("offer_id, product_id, stock");
			Остаток.Вставить ("stock", СтрокаТаблицы.Остаток);
		КонецЕсли;
		Остаток.Вставить ("offer_id", СтрокаТаблицы.АртикулСММ);
		Остаток.Вставить ("product_id", СтрокаТаблицы.IDOzon);
		МассивОстатков.Добавить(Остаток);
	КонецЦикла;
	Если ОбновлениеЦены Тогда
		ДанныеJSON = Новый Структура("prices"); 
		ДанныеJSON.prices = МассивОстатков;
	Иначе 
		ДанныеJSON = Новый Структура("stocks"); 
		ДанныеJSON.stocks = МассивОстатков;
	КонецЕсли;
    Возврат ЗаписьJSON(ДанныеJSON);
КонецФункции

//БЛОК WB
&НаКлиенте
Процедура ОтправитьОстаткиWB(Команда)
	ОтправитьОстаткиWBНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОтправитьОстаткиWBНаСервере()
	
	Если ОтправитьЗапросWB(Ложь,Объект.СписокТоваров) Тогда
		Сообщить("Запрос успешно отправлен.");
	Иначе
		Сообщить("Не удалось отправить запрос."); 
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьЦеныWB(Команда)
	ОтправитьЦеныWBНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОтправитьЦеныWBНаСервере()
	
	Если ОтправитьЗапросWB(Истина,Объект.СписокТоваров) Тогда
		Сообщить("Запрос успешно отправлен.");
	Иначе
		Сообщить("Не удалось отправить запрос."); 
	КонецЕсли;
	
КонецПроцедуры

Функция ОтправитьЗапросWB(ОбновлениеЦены, Товары)
	КоличествоТоваров = Товары.Количество();
	МассивТоваров = Товары.Выгрузить();
	КоличествоЗапросов = Цел(КоличествоТоваров / 1000) + ?(КоличествоТоваров % 1000 > 0, 1, 0);
	
	Для Индекс = 0 По КоличествоЗапросов - 1 Цикл
		Начало = Индекс * 1000;
		Если КоличествоТоваров - 1 > Начало + 999 Тогда
			Конец = Начало + 999;
		Иначе
			Конец = КоличествоТоваров - 1;
		КонецЕсли;

		ТекущиеТовары = Новый Массив;
		
		Для Счетчик = Начало По Конец Цикл
			ТекущиеТовары.Добавить(МассивТоваров[Счетчик]);
		КонецЦикла;
		
		ОтправитьОтдельныйЗапросWB(ОбновлениеЦены, ТекущиеТовары);
	КонецЦикла;

	Возврат Истина;
КонецФункции

Процедура ОтправитьОтдельныйЗапросWB(ОбновлениеЦены,Товары)
	Перем АдресРесурса;
	Если ОбновлениеЦены Тогда
		АдресРесурса = "public/api/v1/prices";  
	Иначе 
		АдресРесурса = "api/v3/stocks/{warehouseId}"; 
		//АдресРесурса = "api/merchantIntegration/v1/offerService/stock/update";   
	КонецЕсли;
	
	Заголовки=Новый Соответствие();
	//Заголовки.Вставить("ApiKey", "4e00968b-0f89-4d91-aa2a-f635ac09ea6b");
	Заголовки.Вставить("Content-Type","application/json");
	Запрос=Новый HTTPЗапрос();
	Запрос.АдресРесурса = АдресРесурса;
	Запрос.Заголовки=Заголовки;
	// Сохраняем тело запроса в переменную перед его отправкой
	ТелоЗапроса = СформироватьТелоЗапросаWB(ОбновлениеЦены,Товары);
	Запрос.УстановитьТелоИзСтроки(ТелоЗапроса);
	ssl = Новый ЗащищенноеСоединениеOpenSSL();
	Соединение=Новый HTTPСоединение("suppliers-api.wildberries.ru",,,,,,ssl);
	//Соединение=Новый HTTPСоединение("partner.sbermegamarket.ru",,,,,,ssl);
	  
	// Отправляем запрос
	Ответ=Соединение.ОтправитьДляОбработки(Запрос);
	
	// Логирование запросов      
	МенеджерЗаписи = РегистрыСведений.ЛогированиеМаркетплейсы.СоздатьМенеджерЗаписи(); 
	МенеджерЗаписи.ДатаВремя = ТекущаяДата();
	МенеджерЗаписи.URL = АдресРесурса;
	МенеджерЗаписи.ТелоЗапроса = ТелоЗапроса;
	МенеджерЗаписи.КодОтвета = Ответ.КодСостояния;
	МенеджерЗаписи.Комментарий = Ответ.ПолучитьТелоКакСтроку(); 
	МенеджерЗаписи.Идентификатор = Новый УникальныйИдентификатор;
	МенеджерЗаписи.Записать();   
	
	Сообщить (Ответ.ПолучитьТелоКакСтроку());
КонецПроцедуры

Функция СформироватьТелоЗапросаWB(ОбновлениеЦены,Товары) 
	
	Перем ДанныеJSON, МассивОстатков, СтрокаТаблицы,Остаток;
	МассивОстатков = Новый Массив;
	Для Каждого СтрокаТаблицы Из Товары Цикл 
		Если ОбновлениеЦены Тогда
			Остаток = Новый Структура("nmId, price");
			Остаток.Вставить ("nmId", СтрокаТаблицы.АртикулСММ);
			Остаток.Вставить ("price", СтрокаТаблицы.ЦенаOzonСоСкидкой);
		Иначе
			Остаток = Новый Структура("sku, amount");
			Остаток.Вставить ("sku", СтрокаТаблицы.АртикулСММ);
			Остаток.Вставить ("amount", СтрокаТаблицы.Остаток);
		КонецЕсли;
		МассивОстатков.Добавить(Остаток);
	КонецЦикла;
	Если ОбновлениеЦены Тогда
		ДанныеJSON = Новый Структура(); 
		ДанныеJSON = МассивОстатков;
	Иначе 
		ДанныеJSON = Новый Структура("stocks"); 
		ДанныеJSON.stocks = МассивОстатков;
	КонецЕсли;
	Возврат ЗаписьJSON(ДанныеJSON);
КонецФункции

//Общие функции
Функция ЗаписьJSON(Данные)
	
	ЗаписьJSON = Новый ЗаписьJSON;   
	ЗаписьJSON.УстановитьСтроку();
	НастройкиJSON = Новый НастройкиСериализацииJSON;
	ЗаписатьJSON(ЗаписьJSON,Данные,НастройкиJSON,"ФункцияПреобразованияJSON", ЭтотОбъект);   
	Возврат ЗаписьJSON.Закрыть();  
	
КонецФункции

Функция ФункцияПреобразованияJSON(Свойство, Значение, ДополнительныеПараметры, Отказ) Экспорт
	
	Если ТипЗнч(Значение) = Тип("СправочникСсылка.Валюты")  Тогда  
		Возврат СокрЛП(Значение.Наименование); 
	КонецЕсли; 
	
КонецФункции  

